version: "3.8"

networks:
  proxy:
    driver: bridge
  internal:
    driver: bridge

volumes:
  db_data:
  npm_data:
  npm_letsencrypt:

services:
  # Reverse proxy + SSL (UI d'admin :81)
  proxy:
    image: jc21/nginx-proxy-manager:latest
    container_name: devops-cyber-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "81:81" # Interface admin NPM (penser à sécuriser)
    networks:
      - proxy
      - internal
    volumes:
      - npm_data:/data
      - npm_letsencrypt:/etc/letsencrypt
      - ./nginx:/etc/nginx/auth # Authentification personnalisée
    depends_on:
      - site
      - api

  # Site statique (servi derrière NPM)
  site:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: devops-cyber-site
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - ./html:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/index.html || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  # API Node.js (derrière NPM sur /api/)
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: devops-cyber-api
    restart: unless-stopped
    networks:
      - internal
    env_file:
      - /home/dsi34/secrets-test/prod.env
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Base de données MariaDB
  db:
    image: mariadb:latest
    container_name: devops-cyber-db
    restart: unless-stopped
    networks:
      - internal
    env_file:
      - /home/dsi34/secrets-test/prod.env
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mariadb-admin ping -h localhost -p${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 30s
      timeout: 5s
      retries: 5

